{
/*
	// Place your snippets for Elm here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"examplesTime": {
		"prefix": "examplesTime",
		"body": [ 
			"import Html exposing (Html)",
			"import Svg exposing (..)",
			"import Svg.Attributes exposing (..)",
			"import Time exposing (Time, second)",
			"",
			"",
			"",
			"main =",
			"  Html.program",
			"    { init = init",
			"    , view = view",
			"    , update = update",
			"    , subscriptions = subscriptions",
			"    }",
			"",
			"",
			"",
			"-- MODEL",
			"",
			"",
			"type alias Model = Time",
			"",
			"",
			"init : (Model, Cmd Msg)",
			"init =",
			"  (0, Cmd.none)",
			"",
			"",
			"",
			"-- UPDATE",
			"",
			"",
			"type Msg",
			"  = Tick Time",
			"",
			"",
			"update : Msg -> Model -> (Model, Cmd Msg)",
			"update msg model =",
			"  case msg of",
			"    Tick newTime ->",
			"      (newTime, Cmd.none)",
			"",
			"",
			"",
			"-- SUBSCRIPTIONS",
			"",
			"",
			"subscriptions : Model -> Sub Msg",
			"subscriptions model =",
			"  Time.every second Tick",
			"",
			"",
			"",
			"-- VIEW",
			"",
			"",
			"view : Model -> Html Msg",
			"view model =",
			"  let",
			"    angle =",
			"      turns (Time.inMinutes model)",
			"",
			"    handX =",
			"      toString (50 + 40 * cos angle)",
			"",
			"    handY =",
			"      toString (50 + 40 * sin angle)",
			"  in",
			"    svg [ viewBox \"0 0 100 100\", width \"300px\" ]",
			"      [ circle [ cx \"50\", cy \"50\", r \"45\", fill \"#0B79CE\" ] []",
			"      , line [ x1 \"50\", y1 \"50\", x2 handX, y2 handY, stroke \"#023963\" ] []",
			"      ]",
			""
		],
		"description": "http://elm-lang.org/examples/time"
	},
	"examplesWebsockets": {
		"prefix": "examplesWebsockets",
		"body": [
			"-- Read more about this program in the official Elm guide:",
			"-- https://guide.elm-lang.org/architecture/effects/web_sockets.html",
			"",
			"import Html exposing (..)",
			"import Html.Attributes exposing (..)",
			"import Html.Events exposing (..)",
			"import WebSocket",
			"",
			"",
			"",
			"main =",
			"  Html.program",
			"    { init = init",
			"    , view = view",
			"    , update = update",
			"    , subscriptions = subscriptions",
			"    }",
			"",
			"",
			"echoServer : String",
			"echoServer =",
			"  \"wss://echo.websocket.org\"",
			"",
			"",
			"",
			"-- MODEL",
			"",
			"",
			"type alias Model =",
			"  { input : String",
			"  , messages : List String",
			"  }",
			"",
			"",
			"init : (Model, Cmd Msg)",
			"init =",
			"  (Model \"\" [], Cmd.none)",
			"",
			"",
			"",
			"-- UPDATE",
			"",
			"",
			"type Msg",
			"  = Input String",
			"  | Send",
			"  | NewMessage String",
			"",
			"",
			"update : Msg -> Model -> (Model, Cmd Msg)",
			"update msg {input, messages} =",
			"  case msg of",
			"    Input newInput ->",
			"      (Model newInput messages, Cmd.none)",
			"",
			"    Send ->",
			"      (Model \"\" messages, WebSocket.send echoServer input)",
			"",
			"    NewMessage str ->",
			"      (Model input (str :: messages), Cmd.none)",
			"",
			"",
			"",
			"-- SUBSCRIPTIONS",
			"",
			"",
			"subscriptions : Model -> Sub Msg",
			"subscriptions model =",
			"  WebSocket.listen echoServer NewMessage",
			"",
			"",
			"",
			"-- VIEW",
			"",
			"",
			"view : Model -> Html Msg",
			"view model =",
			"  div []",
			"    [ input [onInput Input, value model.input] []",
			"    , button [onClick Send] [text \"Send\"]",
			"    , div [] (List.map viewMessage (List.reverse model.messages))",
			"    ]",
			"",
			"",
			"viewMessage : String -> Html msg",
			"viewMessage msg =",
			"  div [] [ text msg ]",
			""
		],
		"description":"http://elm-lang.org/examples/websockets"
	}
}